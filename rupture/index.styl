mobile-cutoff         ?= 400px
desktop-cutoff        ?= 1050px
enable-em-breakpoints ?= false
base-font-size        ?= 16px
scale                 ?= 0 mobile-cutoff 600px 800px desktop-cutoff
enable-anti-overlap   ?= false
anti-overlap          ?= 1px .0625em .0625rem

-convert-to-ems(target, context = base-font-size)
  -targetUnit = unit(target)
  if -targetUnit  is 'em' or -targetUnit is 'rem'
    return target
  return unit((target / context), 'em')

-on-scale(n)
  return unit(n) is ''

-larger-than-scale(n)
  return (n > (length(scale) - 1)) and -on-scale(n)

-is-zero(n)
  return n is 0

-find-anti-overlap(n)
  -nUnit = unit(n)
  for val in anti-overlap
    if -nUnit is unit(val)
      return val
  if -nUnit is 'px'
    return 1px
  if -nUnit is 'em'
    return .0625em
  if -nUnit is 'rem'
    return .0625rem
  else
    return 0
    
-is-positive(n)
  return n >= 0
// +between(min, max)
// usage (scale can be mixed with custom values):
//   - +between(1, 3) scale:scale
//   - +between(0, 3) 0 width:scale
//   - +between(200px, 500px) custom:custom
//   - +between(0, 300px) 0 width:custom
//   - +between(1, 300px) scale:custom
//   - +between(200px, 4) custom:scale

between(min, max, force-anti-overlap = false)
  if (-on-scale(min)) and (-on-scale(max))
    -min = -is-zero(min) ? 0 : scale[min - 1]
    -max = scale[max]
  else if (-on-scale(min)) and (not -on-scale(max))
    -min = -is-zero(min) ? 0 : scale[min - 1]
    -max = max
  else if (not -on-scale(min)) and (-on-scale(max))
    -min = min
    -max = scale[max]
  else
    -min = min
    -max = max
  if -min is not 0
    if force-anti-overlap or enable-anti-overlap
      -overlapShift = -find-anti-overlap(-min)
      -overlapShift = 0 if not -is-positive(-overlapShift)
      -min = -min + -overlapShift
    -min = -convert-to-ems(-min) if enable-em-breakpoints
    condition = 'only screen and (min-width: %s)' % (-min)
  else
    condition = 'only screen'
  unless -larger-than-scale(max)
    if force-anti-overlap or enable-anti-overlap
      -overlapShift = -find-anti-overlap(-max)
      -overlapShift = 0 if -is-positive(-overlapShift)
      -max = -max + -overlapShift
    -max = -convert-to-ems(-max) if enable-em-breakpoints
    condition = condition + ' and (max-width: %s)' % (-max)
  @media condition
    {block} // `{block}` variant to ensure CSS selector is present

at(scale-point, force-anti-overlap = false)
  +between(scale-point, scale-point, force-anti-overlap)
    block // `block` variant to ensure `display: block` is compatible

from(scale-point, force-anti-overlap = false)
  +between(scale-point, length(scale), force-anti-overlap)
    block // `block` variant to ensure `display: block` is compatible

above = from

to(scale-point, force-anti-overlap = false)
  +between(1, scale-point, force-anti-overlap)
    block // `block` variant to ensure `display: block` is compatible

below = to

mobile(force-anti-overlap = false)
  +below(mobile-cutoff, force-anti-overlap)
    block // `block` variant to ensure `display: block` is compatible

tablet(force-anti-overlap = false)
  +between(mobile-cutoff, desktop-cutoff, force-anti-overlap)
    block // `block` variant to ensure `display: block` is compatible

desktop(force-anti-overlap = false)
  +above(desktop-cutoff, force-anti-overlap)
    block // `block` variant to ensure `display: block` is compatible

retina()
  @media (min-resolution: 1.5dppx), (-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (min-resolution: 144dpi)
    {block} // `{block}` variant to ensure CSS selector is present
